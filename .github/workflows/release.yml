name: Release

on: [create]

jobs:
  create_release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
  build_and_upload_release_asset:
    name: Upload Release Asset
    needs: create_release
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, asset: mcrpc-linux, path: mcrpc.bin }
          - { os: windows-latest, asset: mcrpc-windows.exe, path: mcrpc.exe }
          - { os: macos-latest, asset: mcrpc-macos, path: mcrpc.bin }
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Build project
        run: |
          python -m nuitka --assume-yes-for-downloads --follow-imports --enable-plugin=anti-bloat --onefile mcrpc.py
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: ${{ matrix.config.asset }}
          asset_path: ${{ matrix.config.path }}
          asset_content_type: application/octet_stream
